(()=>{"use strict";class t{constructor(t,e,i,o){this.title=t,this.description=e,this.dueDate=i,this.priority=o}generate(){const t=document.createElement("div"),e=document.createElement("h2");e.innerHTML=this.title;const i=document.createElement("p");return i.innerHTML=this.description,t.appendChild(e),t.appendChild(i),t}get getTitle(){return this.title}set setTitle(t){this.title=t}get getDescription(){return this.description}set setDescription(t){this.description=t}}t.prototype.generate;const e=new class{todoItems=[];constructor(t){this.name=t}addTodo(t){this.todoItems.push(t)}printProject(){let t=document.createElement("h1");t.innerHTML=this.name,document.body.appendChild(t),this.todoItems.forEach((t=>{let e=new Todo(t.title,t.description,t.dueDate,t.priority);document.body.appendChild(e.generate())}))}get getTodoItems(){return this.todoItems}}("default"),i=new t("Test1","First Test","N/A","N/A"),o=new t("Test2","Second Test","N/A","N/A");e.addTodo(i),e.addTodo(o),console.log(e.todoItems[1].title)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJtQkFBZSxNQUFNLEVBRW5CQSxZQUFZQyxFQUFPQyxFQUFhQyxFQUFTQyxHQUN2Q0MsS0FBS0osTUFBUUEsRUFDYkksS0FBS0gsWUFBY0EsRUFDbkJHLEtBQUtGLFFBQVVBLEVBQ2ZFLEtBQUtELFNBQVdBLEVBSWxCRSxXQUNFLE1BQU1DLEVBQVdDLFNBQVNDLGNBQWMsT0FFbENDLEVBQVlGLFNBQVNDLGNBQWMsTUFDekNDLEVBQVVDLFVBQVlOLEtBQUtKLE1BRTNCLE1BQU1XLEVBQWtCSixTQUFTQyxjQUFjLEtBTS9DLE9BTEFHLEVBQWdCRCxVQUFZTixLQUFLSCxZQUVqQ0ssRUFBU00sWUFBWUgsR0FDckJILEVBQVNNLFlBQVlELEdBRWRMLEVBSUxPLGVBQ0YsT0FBT1QsS0FBS0osTUFHVmMsYUFBU2QsR0FDWEksS0FBS0osTUFBUUEsRUFHWGUscUJBQ0YsT0FBT1gsS0FBS0gsWUFHVmUsbUJBQWVmLEdBQ2pCRyxLQUFLSCxZQUFjQSxHQUlDLEVBQUtnQixVQUFVWixTQ1l2QyxNQUFNYSxFQUFjLElDdkRMLE1BRWJDLFVBQVksR0FFWnBCLFlBQVlxQixHQUNWaEIsS0FBS2dCLEtBQU9BLEVBSWRDLFFBQVFmLEdBQ05GLEtBQUtlLFVBQVVHLEtBQUtoQixHQUl0QmlCLGVBQ0UsSUFBSUMsRUFBY2pCLFNBQVNDLGNBQWMsTUFDekNnQixFQUFZZCxVQUFZTixLQUFLZ0IsS0FDN0JiLFNBQVNrQixLQUFLYixZQUFZWSxHQUUxQnBCLEtBQUtlLFVBQVVPLFNBQVFDLElBQ3JCLElBQUlDLEVBQVUsSUFBSUMsS0FBS0YsRUFBSzNCLE1BQU8yQixFQUFLMUIsWUFBYTBCLEVBQUt6QixRQUFTeUIsRUFBS3hCLFVBQ3hFSSxTQUFTa0IsS0FBS2IsWUFBWWdCLEVBQVF2QixlQUtsQ3lCLG1CQUNGLE9BQU8xQixLQUFLZSxZRDRCb0IsV0FDOUJZLEVBQVEsSUFBSSxFQUFLLFFBQVMsYUFBYyxNQUFPLE9BQy9DQyxFQUFRLElBQUksRUFBSyxRQUFTLGNBQWUsTUFBTyxPQUN0RGQsRUFBWUcsUUFBUVUsR0FDcEJiLEVBQVlHLFFBQVFXLEdBQ3BCQyxRQUFRQyxJQUFJaEIsRUFBWUMsVUFBVSxHQUFHbkIsUSIsInNvdXJjZXMiOlsid2VicGFjazovL3RvZG9saXN0Ly4vc3JjL3RvZG8uanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdG9kb2xpc3QvLi9zcmMvdG9kb1Byb2plY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9kbyB7XG5cbiAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSkge1xuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gIH1cblxuICAvLyBHZW5lcmF0ZSBUb2RvXG4gIGdlbmVyYXRlKCkge1xuICAgIGNvbnN0IHRvZG9JdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbiAgICBjb25zdCB0b2RvVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xuICAgIHRvZG9UaXRsZS5pbm5lckhUTUwgPSB0aGlzLnRpdGxlO1xuXG4gICAgY29uc3QgdG9kb0Rlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIHRvZG9EZXNjcmlwdGlvbi5pbm5lckhUTUwgPSB0aGlzLmRlc2NyaXB0aW9uO1xuXG4gICAgdG9kb0l0ZW0uYXBwZW5kQ2hpbGQodG9kb1RpdGxlKTtcbiAgICB0b2RvSXRlbS5hcHBlbmRDaGlsZCh0b2RvRGVzY3JpcHRpb24pO1xuXG4gICAgcmV0dXJuIHRvZG9JdGVtO1xuICB9XG5cbiAgLy8gR2V0L1NldFxuICBnZXQgZ2V0VGl0bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMudGl0bGU7XG4gIH1cblxuICBzZXQgc2V0VGl0bGUodGl0bGUpIHtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gIH1cblxuICBnZXQgZ2V0RGVzY3JpcHRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGVzY3JpcHRpb247XG4gIH1cblxuICBzZXQgc2V0RGVzY3JpcHRpb24oZGVzY3JpcHRpb24pIHtcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlID0gVG9kby5wcm90b3R5cGUuZ2VuZXJhdGU7IiwiaW1wb3J0IFRvZG8gZnJvbSBcIi4vdG9kb1wiO1xuaW1wb3J0IFRvZG9Qcm9qZWN0IGZyb20gXCIuL3RvZG9Qcm9qZWN0XCI7XG5cbi8vIEZ1bmN0aW9uIGZvciBjaGVja2luZyBpZiBsb2NhbCBzdG9yYWdlIGlzIGF2YWlsYWJsZVxuZnVuY3Rpb24gc3RvcmFnZUF2YWlsYWJsZSh0eXBlKSB7XG4gIHZhciBzdG9yYWdlO1xuICB0cnkge1xuICAgICAgc3RvcmFnZSA9IHdpbmRvd1t0eXBlXTtcbiAgICAgIHZhciB4ID0gJ19fc3RvcmFnZV90ZXN0X18nO1xuICAgICAgc3RvcmFnZS5zZXRJdGVtKHgsIHgpO1xuICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKHgpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgY2F0Y2goZSkge1xuICAgICAgcmV0dXJuIGUgaW5zdGFuY2VvZiBET01FeGNlcHRpb24gJiYgKFxuICAgICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcbiAgICAgICAgICBlLmNvZGUgPT09IDIyIHx8XG4gICAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICAgIGUuY29kZSA9PT0gMTAxNCB8fFxuICAgICAgICAgIC8vIHRlc3QgbmFtZSBmaWVsZCB0b28sIGJlY2F1c2UgY29kZSBtaWdodCBub3QgYmUgcHJlc2VudFxuICAgICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcbiAgICAgICAgICBlLm5hbWUgPT09ICdRdW90YUV4Y2VlZGVkRXJyb3InIHx8XG4gICAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICAgIGUubmFtZSA9PT0gJ05TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEJykgJiZcbiAgICAgICAgICAvLyBhY2tub3dsZWRnZSBRdW90YUV4Y2VlZGVkRXJyb3Igb25seSBpZiB0aGVyZSdzIHNvbWV0aGluZyBhbHJlYWR5IHN0b3JlZFxuICAgICAgICAgIChzdG9yYWdlICYmIHN0b3JhZ2UubGVuZ3RoICE9PSAwKTtcbiAgfVxufVxuXG4vLyBTYXZlIGFuZCBsb2FkIGEgdG9kbyBpbiBvciBmcm9tIGFuIGFycmF5IG9mIFRvZG8gb2JqZWN0c1xuZnVuY3Rpb24gc2F2ZSh0b2RvUHJvamVjdCkge1xuICBpZiAoc3RvcmFnZUF2YWlsYWJsZSgnbG9jYWxTdG9yYWdlJykpIHtcbiAgICBjb25zb2xlLmxvZyhcIkhlbGxvLCBXb3JsZCFcIik7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ0b2Rvc1wiLCBKU09OLnN0cmluZ2lmeSh0b2RvUHJvamVjdC5nZXRUb2RvSXRlbXMoKSkpO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKCdObyBsb2NhbCB3b3JsZCEnKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBsb2FkKHN0b3JhZ2VOYW1lKSB7XG4gIGlmIChzdG9yYWdlQXZhaWxhYmxlKCdsb2NhbFN0b3JhZ2UnKSkge1xuICAgIGxldCB0ZXh0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oc3RvcmFnZU5hbWUpO1xuICAgIHJldHVybiBKU09OLnBhcnNlKHRleHQpO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUubG9nKFwiTm8gbG9jYWwgd29ybGQhXCIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJ1bigpIHtcbiAgbGV0IHRvZG9Qcm9qZWN0ID0gbG9hZChcInRvZG9zXCIpO1xuICB0b2RvUHJvamVjdC5mb3JFYWNoKHRvZG8gPT4ge1xuICAgIHRvZG9Qcm9qZWN0LmFkZFRvZG8odG9kbyk7XG4gIH0pO1xufVxuXG5jb25zdCB0ZXN0UHJvamVjdCA9IG5ldyBUb2RvUHJvamVjdChcImRlZmF1bHRcIik7XG5jb25zdCB0b2RvMSA9IG5ldyBUb2RvKFwiVGVzdDFcIiwgXCJGaXJzdCBUZXN0XCIsIFwiTi9BXCIsIFwiTi9BXCIpO1xuY29uc3QgdG9kbzIgPSBuZXcgVG9kbyhcIlRlc3QyXCIsIFwiU2Vjb25kIFRlc3RcIiwgXCJOL0FcIiwgXCJOL0FcIik7XG50ZXN0UHJvamVjdC5hZGRUb2RvKHRvZG8xKTtcbnRlc3RQcm9qZWN0LmFkZFRvZG8odG9kbzIpO1xuY29uc29sZS5sb2codGVzdFByb2plY3QudG9kb0l0ZW1zWzFdLnRpdGxlKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBUb2RvUHJvamVjdCB7XG5cbiAgdG9kb0l0ZW1zID0gW107XG5cbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gIH1cblxuICAvLyBBZGQgbmV3IHRvZG8gaXRlbSB0byBwcm9qZWN0XG4gIGFkZFRvZG8odG9kb0l0ZW0pIHtcbiAgICB0aGlzLnRvZG9JdGVtcy5wdXNoKHRvZG9JdGVtKTtcbiAgfVxuXG4gIC8vIFByaW50IHByb2plY3QgdG9kb3NcbiAgcHJpbnRQcm9qZWN0KCkge1xuICAgIGxldCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gICAgcHJvamVjdE5hbWUuaW5uZXJIVE1MID0gdGhpcy5uYW1lO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQocHJvamVjdE5hbWUpO1xuXG4gICAgdGhpcy50b2RvSXRlbXMuZm9yRWFjaCh0b2RvID0+IHtcbiAgICAgIGxldCBuZXdUb2RvID0gbmV3IFRvZG8odG9kby50aXRsZSwgdG9kby5kZXNjcmlwdGlvbiwgdG9kby5kdWVEYXRlLCB0b2RvLnByaW9yaXR5KTtcbiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobmV3VG9kby5nZW5lcmF0ZSgpKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8vIEdldCB0b2RvIGl0ZW1zXG4gIGdldCBnZXRUb2RvSXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9kb0l0ZW1zO1xuICB9XG59Il0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGUiLCJwcmlvcml0eSIsInRoaXMiLCJnZW5lcmF0ZSIsInRvZG9JdGVtIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidG9kb1RpdGxlIiwiaW5uZXJIVE1MIiwidG9kb0Rlc2NyaXB0aW9uIiwiYXBwZW5kQ2hpbGQiLCJnZXRUaXRsZSIsInNldFRpdGxlIiwiZ2V0RGVzY3JpcHRpb24iLCJzZXREZXNjcmlwdGlvbiIsInByb3RvdHlwZSIsInRlc3RQcm9qZWN0IiwidG9kb0l0ZW1zIiwibmFtZSIsImFkZFRvZG8iLCJwdXNoIiwicHJpbnRQcm9qZWN0IiwicHJvamVjdE5hbWUiLCJib2R5IiwiZm9yRWFjaCIsInRvZG8iLCJuZXdUb2RvIiwiVG9kbyIsImdldFRvZG9JdGVtcyIsInRvZG8xIiwidG9kbzIiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIifQ==